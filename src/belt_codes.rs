use crate::belt_type::*;
use super::port::*;

pub const SPRITE_ID_NONE: usize = 0;
pub const SPRITE_ID_UNKNOWN: usize = 1;
pub const SPRITE_ID_INVALID: usize = 2;

pub const fn belt_code_from_ports(up: Port, right: Port, down: Port, left: Port) -> &'static str {
  return BELT_CODES[belt_type_from_ports(up, right, down, left) as usize];
}

pub const BELT_CODES: [&'static str; 275] = [
  "Oob_Invalid", // PART_NONE
  "Oob_Invalid", // PART_TRASH
  "Oob_Invalid", // CONFIG_NODE_SUPPLY_UP
  "Oob_Invalid", // CONFIG_NODE_SUPPLY_RIGHT
  "Oob_Invalid", // CONFIG_NODE_SUPPLY_DOWN
  "Oob_Invalid", // CONFIG_NODE_SUPPLY_LEFT
  "Oob_Invalid", // CONFIG_NODE_DEMAND_UP
  "Oob_Invalid", // CONFIG_NODE_DEMAND_RIGHT
  "Oob_Invalid", // CONFIG_NODE_DEMAND_DOWN
  "Oob_Invalid", // CONFIG_NODE_DEMAND_LEFT
  "Oob_Invalid", // CONFIG_NODE_DOCK_UP
  "Oob_Invalid", // CONFIG_NODE_DOCK_RIGHT
  "Oob_Invalid", // CONFIG_NODE_DOCK_DOWN
  "Oob_Invalid", // CONFIG_NODE_DOCK_LEFT
  "Oob_Invalid", // CONFIG_NODE_MACHINE_1X1
  "Oob_Invalid", // CONFIG_NODE_MACHINE_2X2
  "Oob_Invalid", // CONFIG_NODE_MACHINE_3X3
  "None",
  "Unknown",
  "Invalid",
  "L_",
  "_L",
  "__L",
  "D_",
  "DL_",
  "D_L",
  "D__L",
  "_D",
  "L_D",
  "_DL",
  "_D_L",
  "__D",
  "L__D",
  "_L_D",
  "__DL",
  "R_",
  "LR_",
  "R_L",
  "R__L",
  "DR_",
  "DLR_",
  "DR_L",
  "DR__L",
  "R_D",
  "LR_D",
  "R_DL",
  "R_D_L",
  "R__D",
  "LR__D",
  "R_L_D",
  "R__DL",
  "_R",
  "L_R",
  "_LR",
  "_R_L",
  "D_R",
  "DL_R",
  "D_LR",
  "D_R_L",
  "_DR",
  "L_DR",
  "_DLR",
  "_DR_L",
  "_R_D",
  "L_R_D",
  "_LR_D",
  "_R_DL",
  "__R",
  "L__R",
  "_L_R",
  "__LR",
  "D__R",
  "DL__R",
  "D_L_R",
  "D__LR",
  "_D_R",
  "L_D_R",
  "_DL_R",
  "_D_LR",
  "__DR",
  "L__DR",
  "_L_DR",
  "__DLR",
  "U_",
  "LU_",
  "U_L",
  "U__L",
  "DU_",
  "DLU_",
  "DU_L",
  "DU__L",
  "U_D",
  "LU_D",
  "U_DL",
  "U_D_L",
  "U__D",
  "LU__D",
  "U_L_D",
  "U__DL",
  "RU_",
  "LRU_",
  "RU_L",
  "RU__L",
  "DRU_",
  "DLRU_",
  "DRU_L",
  "DRU__L",
  "RU_D",
  "LRU_D",
  "RU_DL",
  "RU_D_L",
  "RU__D",
  "LRU__D",
  "RU_L_D",
  "RU__DL",
  "U_R",
  "LU_R",
  "U_LR",
  "U_R_L",
  "DU_R",
  "DLU_R",
  "DU_LR",
  "DU_R_L",
  "U_DR",
  "LU_DR",
  "U_DLR",
  "U_DR_L",
  "U_R_D",
  "LU_R_D",
  "U_LR_D",
  "U_R_DL",
  "U__R",
  "LU__R",
  "U_L_R",
  "U__LR",
  "DU__R",
  "DLU__R",
  "DU_L_R",
  "DU__LR",
  "U_D_R",
  "LU_D_R",
  "U_DL_R",
  "U_D_LR",
  "U__DR",
  "LU__DR",
  "U_L_DR",
  "U__DLR",
  "_U",
  "L_U",
  "_LU",
  "_U_L",
  "D_U",
  "DL_U",
  "D_LU",
  "D_U_L",
  "_DU",
  "L_DU",
  "_DLU",
  "_DU_L",
  "_U_D",
  "L_U_D",
  "_LU_D",
  "_U_DL",
  "R_U",
  "LR_U",
  "R_LU",
  "R_U_L",
  "DR_U",
  "DLR_U",
  "DR_LU",
  "DR_U_L",
  "R_DU",
  "LR_DU",
  "R_DLU",
  "R_DU_L",
  "R_U_D",
  "LR_U_D",
  "R_LU_D",
  "R_U_DL",
  "_RU",
  "L_RU",
  "_LRU",
  "_RU_L",
  "D_RU",
  "DL_RU",
  "D_LRU",
  "D_RU_L",
  "_DRU",
  "L_DRU",
  "_DLRU",
  "_DRU_L",
  "_RU_D",
  "L_RU_D",
  "_LRU_D",
  "_RU_DL",
  "_U_R",
  "L_U_R",
  "_LU_R",
  "_U_LR",
  "D_U_R",
  "DL_U_R",
  "D_LU_R",
  "D_U_LR",
  "_DU_R",
  "L_DU_R",
  "_DLU_R",
  "_DU_LR",
  "_U_DR",
  "L_U_DR",
  "_LU_DR",
  "_U_DLR",
  "__U",
  "L__U",
  "_L_U",
  "__LU",
  "D__U",
  "DL__U",
  "D_L_U",
  "D__LU",
  "_D_U",
  "L_D_U",
  "_DL_U",
  "_D_LU",
  "__DU",
  "L__DU",
  "_L_DU",
  "__DLU",
  "R__U",
  "LR__U",
  "R_L_U",
  "R__LU",
  "DR__U",
  "DLR__U",
  "DR_L_U",
  "DR__LU",
  "R_D_U",
  "LR_D_U",
  "R_DL_U",
  "R_D_LU",
  "R__DU",
  "LR__DU",
  "R_L_DU",
  "R__DLU",
  "_R_U",
  "L_R_U",
  "_LR_U",
  "_R_LU",
  "D_R_U",
  "DL_R_U",
  "D_LR_U",
  "D_R_LU",
  "_DR_U",
  "L_DR_U",
  "_DLR_U",
  "_DR_LU",
  "_R_DU",
  "L_R_DU",
  "_LR_DU",
  "_R_DLU",
  "__RU",
  "L__RU",
  "_L_RU",
  "__LRU",
  "D__RU",
  "DL__RU",
  "D_L_RU",
  "D__LRU",
  "_D_RU",
  "L_D_RU",
  "_DL_RU",
  "_D_LRU",
  "__DRU",
  "L__DRU",
  "_L_DRU",
  "__DLRU",
];
