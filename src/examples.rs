fn factory_with_many_concurrent_outs_and_alt_input_path() {

  // When multiple belts could receive a part from the same machine, how does the machine get to
  // pick the belt such that it rotates?
  // The problem occurs when the belt would prioritize the machine but has alternative options
  // so if the machine passes up on the belt, the belt may want to pick another neighbor instead
  // but at that point it won't be considered anymore (or the neighbor may have gone already)
  // It also can't pick from the machine because then the machine can't rotate.
  // It also can't ask the machine because other neighbors for this machine may not have ticked
  // yet, so the machine may not be able to make a complete decision yet.

  // In this example, the bridge from the machine to the right port is an undetermined direction
  // because there's no clear way in which the parts should flow.
  // In some future we may do the analysis that parts could never flow into that direction because
  // the machine would always trash them, so the flow should be the other way. But for now I think
  // the path would just be marked as junk, and not actually used.

  let map = "\
    ..s.s............\n\
    ..b.b............\n\
    sb1bb............\n\
    ..b.b............\n\
    dbb.b............\n\
    ....b............\n\
    dbbbb............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = a -> z\n\
    s1 = a\n\
    s2 = z\n\
    s3 = a\n\
    d1 = z\n\
    d2 = z\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [68, 102, 69, 103, 37, 70, 104, 105, 106, 53, 89, 36, 72, 19, 35, 55, 38, 21, 2, 4, 34]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│   s s             │"       "│   . .             │"    "│   . .             │"    "│   v v             │"    "│   . .             │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│ │ ║ ║           │ │"       "│ │ v v           │ │"    "│ │ . .           │ │"    "│ │ v v           │ │"    "│ │ . .           │ │"        "│ │ - -           │ │"    "│ │ - -           │ │"
  // (34 )  "│s│═α═╣           │ │"       "│.│.v.v           │ │"    "│>│>??.           │ │"    "│.│.v.v           │ │"    "│.│>>??           │ │"        "│ │- --           │ │"    "│ │- --           │ │"
  // (51 )  "│ │ ║ ║           │ │"       "│ │ v v           │ │"    "│ │ . .           │ │"    "│ │ v v           │ │"    "│ │ . .           │ │"        "│ │ - -           │ │"    "│ │ - -           │ │"
  // (68 )  "│d│═╝ ║           │ │"       "│.│.v v           │ │"    "│<│<. .           │ │"    "│.│.. v           │ │"    "│.│<< .           │ │"        "│ │-- -           │ │"    "│ │-- -           │ │"
  // (85 )  "│ │   ║           │ │"       "│ │   v           │ │"    "│ │   .           │ │"    "│ │   v           │ │"    "│ │   .           │ │"        "│ │   -           │ │"    "│ │   -           │ │"
  // (102)  "│d│═══╝           │ │"       "│.│...v           │ │"    "│<│<<<.           │ │"    "│.│....           │ │"    "│.│<<<<           │ │"        "│ │----           │ │"    "│ │----           │ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn factory_with_multi_output() {

  // When multiple belts could receive a part from the same machine, how does the machine get to
  // pick the belt such that it rotates?
  // The problem occurs when the belt would prioritize the machine but has alternative options
  // so if the machine passes up on the belt, the belt may want to pick another neighbor instead
  // but at that point it won't be considered anymore (or the neighbor may have gone already)
  // It also can't pick from the machine because then the machine can't rotate.
  // It also can't ask the machine because other neighbors for this machine may not have ticked
  // yet, so the machine may not be able to make a complete decision yet.

  let map = "\
    ..s..............\n\
    ..b..............\n\
    ..1bb............\n\
    ..b.b............\n\
    dbb.b............\n\
    ....b............\n\
    dbbbb............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = a -> z\n\
    s1 = a\n\
    d1 = z\n\
    d2 = z\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [68, 102, 69, 103, 70, 104, 105, 106, 53, 89, 72, 55, 38, 37, 36, 19, 2]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│   s               │"       "│   .               │"    "│   .               │"    "│   v               │"    "│   .               │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│ │ ║             │ │"       "│ │ v             │ │"    "│ │ .             │ │"    "│ │ v             │ │"    "│ │ .             │ │"        "│ │ -             │ │"    "│ │ -             │ │"
  // (34 )  "│ │ α═╗           │ │"       "│ │ v..           │ │"    "│ │ >>.           │ │"    "│ │ v.v           │ │"    "│ │ .>>           │ │"        "│ │  --           │ │"    "│ │  --           │ │"
  // (51 )  "│ │ ║ ║           │ │"       "│ │ v v           │ │"    "│ │ . .           │ │"    "│ │ v v           │ │"    "│ │ . .           │ │"        "│ │ - -           │ │"    "│ │ - -           │ │"
  // (68 )  "│d│═╝ ║           │ │"       "│.│.v v           │ │"    "│<│<. .           │ │"    "│.│.. v           │ │"    "│.│<< .           │ │"        "│ │-- -           │ │"    "│ │-- -           │ │"
  // (85 )  "│ │   ║           │ │"       "│ │   v           │ │"    "│ │   .           │ │"    "│ │   v           │ │"    "│ │   .           │ │"        "│ │   -           │ │"    "│ │   -           │ │"
  // (102)  "│d│═══╝           │ │"       "│.│...v           │ │"    "│<│<<<.           │ │"    "│.│....           │ │"    "│.│<<<<           │ │"        "│ │----           │ │"    "│ │----           │ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn double_factory_with_double_output_one_shared() {
  // Two factories, each one input two outputs. One output is shared

  // But in this case the algo can't figure out how the middle part must flow because
  // there are unresolved crossings on both sides which block each other until one of
  // them gets resolved, which won't happen.
  // Need a constraint solver for this stuff. Ugh.

  let map = "\
    ..s.....d.....s..\n\
    ..b.....b.....b..\n\
    ..1bbbbbbbbbbb1..\n\
    ..b.b.......b.b..\n\
    dbb.b.......b.bbd\n\
    ....b.......b....\n\
    dbbbb.......bbbbd\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = a -> z\n\
    s1 = a\n\
    s2 = a\n\
    s3 = a\n\
    d1 = z\n\
    d2 = z\n\
    d3 = z\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [8, 68, 84, 102, 118, 25, 69, 83, 103, 117, 37, 39, 40, 41, 42, 43, 44, 45, 47, 70, 82, 104, 105, 106, 116, 53, 65, 89, 115, 36, 48, 72, 114, 19, 31, 55, 97, 38, 80, 63, 46, 2, 14]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│   s     d     s   │"       "│   .     .     .   │"    "│   .     .     .   │"    "│   v     ^     v   │"    "│   .     .     .   │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│ │ ║     ║     ║ │ │"       "│ │ v     ^     v │ │"    "│ │ .     .     . │ │"    "│ │ v     ^     v │ │"    "│ │ .     .     . │ │"        "│ │ -     -     - │ │"    "│ │ -     -     - │ │"
  // (34 )  "│ │ α═!═══╩═══!═β │ │"       "│ │ v.....^.....v │ │"    "│ │ ????????????. │ │"    "│ │ v.v.......v.v │ │"    "│ │ .???????????? │ │"        "│ │  -----------  │ │"    "│ │  -----------  │ │"
  // (51 )  "│ │ ║ ║       ║ ║ │ │"       "│ │ v v       v v │ │"    "│ │ . .       . . │ │"    "│ │ v v       v v │ │"    "│ │ . .       . . │ │"        "│ │ - -       - - │ │"    "│ │ - -       - - │ │"
  // (68 )  "│d│═╝ ║       ║ ╚═│d│"       "│.│.v v       v v.│.│"    "│<│<. .       . >>│.│"    "│.│.. v       v ..│.│"    "│.│<< .       . .>│>│"        "│ │-- -       - --│ │"    "│ │-- -       - --│ │"
  // (85 )  "│ │   ║       ║   │ │"       "│ │   v       v   │ │"    "│ │   .       .   │ │"    "│ │   v       v   │ │"    "│ │   .       .   │ │"        "│ │   -       -   │ │"    "│ │   -       -   │ │"
  // (102)  "│d│═══╝       ╚═══│d│"       "│.│...v       v...│.│"    "│<│<<<.       >>>>│.│"    "│.│....       ....│.│"    "│.│<<<<       .>>>│>│"        "│ │----       ----│ │"    "│ │----       ----│ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"
}

fn dev_example() {

  // Worked with this exmaple for a while

  let map = "\
    ........s........\n\
    .111....b........\n\
    .111bbbbbbbbbbb..\n\
    .111..........b..\n\
    ..b...........b..\n\
    ..bbbbbbb.....b..\n\
    ........b.....b..\n\
    .......222....b..\n\
    .......222....b..\n\
    .......222....b..\n\
    ........b.....bbs\n\
    ..bbbbbbb........\n\
    ..b.....b........\n\
    ..b.....b........\n\
    dbb..bbbb........\n\
    .....b...........\n\
    .....d...........\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = w\n\
    s2 = s\n\
    d1 = g\n\
    d2 = g\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [238, 277, 239, 260, 240, 243, 244, 245, 246, 223, 229, 206, 212, 189, 190, 191, 192, 193, 194, 195, 178, 126, 110, 93, 92, 91, 90, 89, 88, 87, 70, 18, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 65, 82, 99, 116, 133, 150, 167, 184, 185, 25, 8, 186]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│         s         │"       "│         .         │"    "│         .         │"    "│         v         │"    "│         .         │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│ │ααα    ║       │ │"       "│ │...    v       │ │"    "│ │...    .       │ │"    "│ │...    v       │ │"    "│ │...    .       │ │"        "│ │       -       │ │"    "│ │       -       │ │"
  // (34 )  "│ │ααα════╩═════╗ │ │"       "│ │.......v...... │ │"    "│ │..<<<<<<<<<<<. │ │"    "│ │.............^ │ │"    "│ │...<<<<<<<<<<< │ │"        "│ │   ----------- │ │"    "│ │   ----------- │ │"
  // (51 )  "│ │ααα          ║ │ │"       "│ │...          ^ │ │"    "│ │...          . │ │"    "│ │.v.          ^ │ │"    "│ │...          . │ │"        "│ │             - │ │"    "│ │             - │ │"
  // (68 )  "│ │ ║           ║ │ │"       "│ │ v           ^ │ │"    "│ │ .           . │ │"    "│ │ v           ^ │ │"    "│ │ .           . │ │"        "│ │ -           - │ │"    "│ │ -           - │ │"
  // (85 )  "│ │ ╚═════╗     ║ │ │"       "│ │ v......     ^ │ │"    "│ │ >>>>>>.     . │ │"    "│ │ ......v     ^ │ │"    "│ │ .>>>>>>     . │ │"        "│ │ -------     - │ │"    "│ │ -------     - │ │"
  // (102)  "│ │       ║     ║ │ │"       "│ │       v     ^ │ │"    "│ │       .     . │ │"    "│ │       v     ^ │ │"    "│ │       .     . │ │"        "│ │       -     - │ │"    "│ │       -     - │ │"
  // (119)  "│ │      βββ    ║ │ │"       "│ │      .v.    ^ │ │"    "│ │      ...    . │ │"    "│ │      ...    ^ │ │"    "│ │      ...    . │ │"        "│ │             - │ │"    "│ │             - │ │"
  // (136)  "│ │      βββ    ║ │ │"       "│ │      ...    ^ │ │"    "│ │      ...    . │ │"    "│ │      ...    ^ │ │"    "│ │      ...    . │ │"        "│ │             - │ │"    "│ │             - │ │"
  // (153)  "│ │      βββ    ║ │ │"       "│ │      ...    ^ │ │"    "│ │      ...    . │ │"    "│ │      .v.    ^ │ │"    "│ │      ...    . │ │"        "│ │             - │ │"    "│ │             - │ │"
  // (170)  "│ │       ║     ╚═│s│"       "│ │       v     ^.│.│"    "│ │       .     <<│.│"    "│ │       v     ..│.│"    "│ │       .     .<│<│"        "│ │       -     --│ │"    "│ │       -     --│ │"
  // (187)  "│ │ ╔═════╣       │ │"       "│ │ ......v       │ │"    "│ │ <<<<<<.       │ │"    "│ │ v.....v       │ │"    "│ │ .<<<<<<       │ │"        "│ │ -------       │ │"    "│ │ -------       │ │"
  // (204)  "│ │ ║     ║       │ │"       "│ │ v     v       │ │"    "│ │ .     .       │ │"    "│ │ v     v       │ │"    "│ │ .     .       │ │"        "│ │ -     -       │ │"    "│ │ -     -       │ │"
  // (221)  "│ │ ║     ║       │ │"       "│ │ v     v       │ │"    "│ │ .     .       │ │"    "│ │ v     v       │ │"    "│ │ .     .       │ │"        "│ │ -     -       │ │"    "│ │ -     -       │ │"
  // (238)  "│d│═╝  ╔══╝       │ │"       "│.│.v  ...v       │ │"    "│<│<.  <<<.       │ │"    "│.│..  v...       │ │"    "│.│<<  .<<<       │ │"        "│ │--  ----       │ │"    "│ │--  ----       │ │"
  // (255)  "│ │    ║          │ │"       "│ │    v          │ │"    "│ │    .          │ │"    "│ │    v          │ │"    "│ │    .          │ │"        "│ │    -          │ │"    "│ │    -          │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│      d            │"       "│      v            │"    "│      .            │"    "│      .            │"    "│      .            │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn dev_example_multi_machine_out() {

  // Worked with this exmaple for a while

  let map = "\
    ........s........\n\
    .111bbbbbbbbbbb..\n\
    .111..........b..\n\
    .111bbbbbbbb..b..\n\
    ..b........b..b..\n\
    ..bbbbbbb..b..b..\n\
    ........b..b..b..\n\
    .......222.b..b..\n\
    .......222.b..b..\n\
    .......222.b..b..\n\
    ........b..b..bbs\n\
    ..bbbbbbb..b.....\n\
    ..b.....b..bbbbbd\n\
    ..b.....b........\n\
    dbb..bbbb........\n\
    .....b...........\n\
    .....d...........\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = w\n\
    s2 = s\n\
    d1 = w\n\
    d2 = g\n\
    d2 = g\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [220, 238, 277, 219, 239, 260, 218, 240, 243, 244, 245, 246, 217, 223, 229, 206, 212, 216, 189, 190, 191, 192, 193, 194, 195, 215, 178, 198, 126, 181, 110, 164, 93, 147, 92, 130, 91, 113, 90, 96, 79, 89, 62, 88, 61, 87, 60, 70, 59, 58, 57, 56, 55, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 48, 65, 82, 99, 116, 133, 150, 167, 184, 185, 8, 186]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│         s         │"       "│         .         │"    "│         .         │"    "│         v         │"    "│         .         │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│ │ααα════╩═════╗ │ │"       "│ │.......v...... │ │"    "│ │..<<<<<<<<<<<. │ │"    "│ │.............^ │ │"    "│ │...<<<<<<<<<<< │ │"        "│ │   ----------- │ │"    "│ │   ----------- │ │"
  // (34 )  "│ │ααα          ║ │ │"       "│ │...          ^ │ │"    "│ │...          . │ │"    "│ │...          ^ │ │"    "│ │...          . │ │"        "│ │             - │ │"    "│ │             - │ │"
  // (51 )  "│ │ααα═══════╗  ║ │ │"       "│ │...........  ^ │ │"    "│ │..>>>>>>>>.  . │ │"    "│ │.v........v  ^ │ │"    "│ │...>>>>>>>>  . │ │"        "│ │   --------  - │ │"    "│ │   --------  - │ │"
  // (68 )  "│ │ ║        ║  ║ │ │"       "│ │ v        v  ^ │ │"    "│ │ .        .  . │ │"    "│ │ v        v  ^ │ │"    "│ │ .        .  . │ │"        "│ │ -        -  - │ │"    "│ │ -        -  - │ │"
  // (85 )  "│ │ ╚═════╗  ║  ║ │ │"       "│ │ v......  v  ^ │ │"    "│ │ >>>>>>.  .  . │ │"    "│ │ ......v  v  ^ │ │"    "│ │ .>>>>>>  .  . │ │"        "│ │ -------  -  - │ │"    "│ │ -------  -  - │ │"
  // (102)  "│ │       ║  ║  ║ │ │"       "│ │       v  v  ^ │ │"    "│ │       .  .  . │ │"    "│ │       v  v  ^ │ │"    "│ │       .  .  . │ │"        "│ │       -  -  - │ │"    "│ │       -  -  - │ │"
  // (119)  "│ │      βββ ║  ║ │ │"       "│ │      .v. v  ^ │ │"    "│ │      ... .  . │ │"    "│ │      ... v  ^ │ │"    "│ │      ... .  . │ │"        "│ │          -  - │ │"    "│ │          -  - │ │"
  // (136)  "│ │      βββ ║  ║ │ │"       "│ │      ... v  ^ │ │"    "│ │      ... .  . │ │"    "│ │      ... v  ^ │ │"    "│ │      ... .  . │ │"        "│ │          -  - │ │"    "│ │          -  - │ │"
  // (153)  "│ │      βββ ║  ║ │ │"       "│ │      ... v  ^ │ │"    "│ │      ... .  . │ │"    "│ │      .v. v  ^ │ │"    "│ │      ... .  . │ │"        "│ │          -  - │ │"    "│ │          -  - │ │"
  // (170)  "│ │       ║  ║  ╚═│s│"       "│ │       v  v  ^.│.│"    "│ │       .  .  <<│.│"    "│ │       v  v  ..│.│"    "│ │       .  .  .<│<│"        "│ │       -  -  --│ │"    "│ │       -  -  --│ │"
  // (187)  "│ │ ╔═════╣  ║    │ │"       "│ │ ......v  v    │ │"    "│ │ <<<<<<.  .    │ │"    "│ │ v.....v  v    │ │"    "│ │ .<<<<<<  .    │ │"        "│ │ -------  -    │ │"    "│ │ -------  -    │ │"
  // (204)  "│ │ ║     ║  ╚════│d│"       "│ │ v     v  v....│.│"    "│ │ .     .  >>>>>│.│"    "│ │ v     v  .....│.│"    "│ │ .     .  .>>>>│>│"        "│ │ -     -  -----│ │"    "│ │ -     -  -----│ │"
  // (221)  "│ │ ║     ║       │ │"       "│ │ v     v       │ │"    "│ │ .     .       │ │"    "│ │ v     v       │ │"    "│ │ .     .       │ │"        "│ │ -     -       │ │"    "│ │ -     -       │ │"
  // (238)  "│d│═╝  ╔══╝       │ │"       "│.│.v  ...v       │ │"    "│<│<.  <<<.       │ │"    "│.│..  v...       │ │"    "│.│<<  .<<<       │ │"        "│ │--  ----       │ │"    "│ │--  ----       │ │"
  // (255)  "│ │    ║          │ │"       "│ │    v          │ │"    "│ │    .          │ │"    "│ │    v          │ │"    "│ │    .          │ │"        "│ │    -          │ │"    "│ │    -          │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│      d            │"       "│      v            │"    "│      .            │"    "│      .            │"    "│      .            │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn dev_example_multi_everything() {
  let map = "\
    ...............s.\n\
    sb.111bbbbbbbb.b.\n\
    .b.111.......b.b.\n\
    .b.111bbbbb..bbb.\n\
    .b.b.b....bb...b.\n\
    .b.b.bbbb..b...b.\n\
    .b.b....b..b...b.\n\
    .bbb...222.b...b.\n\
    ...b...222.b..bb.\n\
    sbbb...222.b..b..\n\
    ........b..b..bbs\n\
    ..bbbbbbb..b.....\n\
    ..b.....b..bbbbbd\n\
    ..b.....b........\n\
    dbb..bbbb........\n\
    .....b...........\n\
    .....d...........\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = w\n\
    s2 = w\n\
    s3 = s\n\
    s4 = s\n\
    d1 = s\n\
    d2 = w\n\
    d3 = g\n\
    d4 = g\n\
  ";
  let mut factory = create_factory(&mut options, &mut state, map.to_string());
  print_floor_with_views(options, state, &mut factory);

  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│                s  │"       "│                .  │"    "│                .  │"    "│                v  │"    "│                .  │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│s│╗ ααα═══════╗ ║│ │"       "│.│. ........... v│ │"    "│>│. ..<<<<<<<<. .│ │"    "│.│v ..........^ v│ │"    "│.│> ...<<<<<<<< .│ │"        "│ │-    -------- -│ │"    "│ │-    -------- -│ │"
  // (34 )  "│ │║ ααα       ║ ║│ │"       "│ │v ...       ^ v│ │"    "│ │. ...       . .│ │"    "│ │v ...       ^ v│ │"    "│ │. ...       . .│ │"        "│ │-           - -│ │"    "│ │-           - -│ │"
  // (51 )  "│ │║ ααα════╗  ╚═╣│ │"       "│ │v ........  ^.v│ │"    "│ │. ..>>>>>.  <<.│ │"    "│ │v ^.v....v  ..^│ │"    "│ │. ...>>>>>  .<<│ │"        "│ │-    -----  ---│ │"    "│ │-    -----  ---│ │"
  // (68 )  "│ │║ ║ ║    ╚╗   ║│ │"       "│ │v ^ v    v.   ^│ │"    "│ │. . .    >.   .│ │"    "│ │v ^ v    .v   ^│ │"    "│ │. . .    .>   .│ │"        "│ │- - -    --   -│ │"    "│ │- - -    --   -│ │"
  // (85 )  "│ │║ ║ ╚══╗  ║   ║│ │"       "│ │v ^ v...  v   ^│ │"    "│ │. . >>>.  .   .│ │"    "│ │v ^ ...v  v   ^│ │"    "│ │. . .>>>  .   .│ │"        "│ │- - ----  -   -│ │"    "│ │- - ----  -   -│ │"
  // (102)  "│ │║ ║    ║  ║   ║│ │"       "│ │v ^    v  v   ^│ │"    "│ │. .    .  .   .│ │"    "│ │v ^    v  v   ^│ │"    "│ │. .    .  .   .│ │"        "│ │- -    -  -   -│ │"    "│ │- -    -  -   -│ │"
  // (119)  "│ │╚═╣   βββ ║   ║│ │"       "│ │v.^   .v. v   ^│ │"    "│ │>>.   ... .   .│ │"    "│ │..^   ... v   ^│ │"    "│ │.>>   ... .   .│ │"        "│ │---       -   -│ │"    "│ │---       -   -│ │"
  // (136)  "│ │  ║   βββ ║  ╔╝│ │"       "│ │  ^   ... v  .^│ │"    "│ │  .   ... .  >.│ │"    "│ │  ^   ... v  ^.│ │"    "│ │  .   ... .  .>│ │"        "│ │  -       -  --│ │"    "│ │  -       -  --│ │"
  // (153)  "│s│══╝   βββ ║  ║ │ │"       "│.│..^   ... v  ^ │ │"    "│>│>>.   ... .  . │ │"    "│.│...   .v. v  ^ │ │"    "│.│>>>   ... .  . │ │"        "│ │---       -  - │ │"    "│ │---       -  - │ │"
  // (170)  "│ │       ║  ║  ╚═│s│"       "│ │       v  v  ^.│.│"    "│ │       .  .  <<│.│"    "│ │       v  v  ..│.│"    "│ │       .  .  .<│<│"        "│ │       -  -  --│ │"    "│ │       -  -  --│ │"
  // (187)  "│ │ ╔═════╣  ║    │ │"       "│ │ ......v  v    │ │"    "│ │ <<<<<<.  .    │ │"    "│ │ v.....v  v    │ │"    "│ │ .<<<<<<  .    │ │"        "│ │ -------  -    │ │"    "│ │ -------  -    │ │"
  // (204)  "│ │ ║     ║  ╚════│d│"       "│ │ v     v  v....│.│"    "│ │ .     .  >>>>>│.│"    "│ │ v     v  .....│.│"    "│ │ .     .  .>>>>│>│"        "│ │ -     -  -----│ │"    "│ │ -     -  -----│ │"
  // (221)  "│ │ ║     ║       │ │"       "│ │ v     v       │ │"    "│ │ .     .       │ │"    "│ │ v     v       │ │"    "│ │ .     .       │ │"        "│ │ -     -       │ │"    "│ │ -     -       │ │"
  // (238)  "│d│═╝  ╔══╝       │ │"       "│.│.v  ...v       │ │"    "│<│<.  <<<.       │ │"    "│.│..  v...       │ │"    "│.│<<  .<<<       │ │"        "│ │--  ----       │ │"    "│ │--  ----       │ │"
  // (255)  "│ │    ║          │ │"       "│ │    v          │ │"    "│ │    .          │ │"    "│ │    v          │ │"    "│ │    .          │ │"        "│ │    -          │ │"    "│ │    -          │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│      d            │"       "│      v            │"    "│      .            │"    "│      .            │"    "│      .            │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"
}

fn multi_supply_to_belt() {

  // A belt can have two suppliers and should be able to switch properly between the two

  let map = "\
    .s...............\n\
    sb...............\n\
    .b...............\n\
    db...............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = a\n\
    s2 = a\n\
    d1 = a\n\
    d2 = a\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);


  // prio: [51, 52, 35, 18, 1, 17]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│  s                │"       "│  .                │"    "│  .                │"    "│  v                │"    "│  .                │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│s│╣              │ │"       "│.│v              │ │"    "│>│.              │ │"    "│.│v              │ │"    "│.│>              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (34 )  "│ │║              │ │"       "│ │v              │ │"    "│ │.              │ │"    "│ │v              │ │"    "│ │.              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (51 )  "│d│╝              │ │"       "│.│v              │ │"    "│<│.              │ │"    "│.│.              │ │"    "│.│<              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (68 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (85 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (102)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn multi_demand_to_belt() {

  // A belt can have two demanders and should be able to switch properly between the two

  let map = "\
    .d...............\n\
    db...............\n\
    .b...............\n\
    sb...............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = a\n\
    s2 = a\n\
    d1 = a\n\
    d2 = a\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);

  // prio: [1, 17, 18, 18, 35, 52, 51]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│  d                │"       "│  .                │"    "│  .                │"    "│  ^                │"    "│  .                │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│d│╣              │ │"       "│.│^              │ │"    "│<│.              │ │"    "│.│^              │ │"    "│.│<              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (34 )  "│ │║              │ │"       "│ │^              │ │"    "│ │.              │ │"    "│ │^              │ │"    "│ │.              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (51 )  "│s│╝              │ │"       "│.│^              │ │"    "│>│.              │ │"    "│.│.              │ │"    "│.│>              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (68 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (85 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (102)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn supply_and_demand_to_belt() {

  // A belt can be connected to a supply and demand at the same time because why not

  let map = "\
    .s...............\n\
    db...............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = a\n\
    s2 = a\n\
    d1 = a\n\
    d2 = a\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);

  // prio: [17, 18, 1]
  //         "0 123456789012345 6"                port_u                     port_r                     port_d                     port_l                       belt_from                   belt_to
  // (   )  "┌───────────────────┐"       "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"    "┌───────────────────┐"        "┌───────────────────┐"    "┌───────────────────┐"
  // (0  )  "│  s                │"       "│  .                │"    "│  .                │"    "│  v                │"    "│  .                │"        "│                   │"    "│                   │"
  // (   )  "│ ┌───────────────┐ │"       "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"        "│ ┌───────────────┐ │"    "│ ┌───────────────┐ │"
  // (17 )  "│d│╝              │ │"       "│.│v              │ │"    "│<│.              │ │"    "│.│.              │ │"    "│.│<              │ │"        "│ │-              │ │"    "│ │-              │ │"
  // (34 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (51 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (68 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (85 )  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (102)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (119)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (136)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (153)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (170)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (187)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (204)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (221)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (238)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (255)  "│ │               │ │"       "│ │               │ │"    "│ │               │ │"    "│ │               │ │"    "│ │               │ │"        "│ │               │ │"    "│ │               │ │"
  // (   )  "│ └───────────────┘ │"       "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"    "│ └───────────────┘ │"        "│ └───────────────┘ │"    "│ └───────────────┘ │"
  // (272)  "│                   │"       "│                   │"    "│                   │"    "│                   │"    "│                   │"        "│                   │"    "│                   │"
  // (   )  "└───────────────────┘"       "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"    "└───────────────────┘"        "└───────────────────┘"    "└───────────────────┘"
  //         "0 123456789012345 6"

}

fn two_supplies_one_demand_switching() {
  // Both supplies go on the same belt to the same demand
  // The T belt should alternate them properly once the second supply parts reach it

  let map = "\
    ...s.s...........\n\
    ...b.b...........\n\
    ..bbbb...........\n\
    ..b..............\n\
    ..b..............\n\
    ..b..............\n\
    ..b..............\n\
    dbb..............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    m1 = ws -> b\n\
    m2 = b -> g\n\
    s1 = w\n\
    s2 = s\n\
    d1 = g\n\
    d2 = g\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);

}

fn one_to_three_crossing() {
  // A crossing with one inbound and three outbounds. Was broken so I needed a test.

  let map = "\
    ....s.d..........\n\
    ....b.b..........\n\
    ....b.b..........\n\
    dbbbbbb..........\n\
    ....b............\n\
    dbbbb............\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    .................\n\
    s1 = w s:10 c:5\n\
    d1 = s\n\
    d2 = s\n\
    d3 = s\n\
  ";
  let mut factory = create_factory(options, state, map.to_string());
  println!("prio: {:?}", factory.prio);
  print_floor_with_views(options, state, &mut factory);

}
